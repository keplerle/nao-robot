<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Generateur de calcul" id="1" localization="8" tooltip="" x="305" y="97">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import random
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.niveau = 1
        self.signe = 1
        self.authorisation = 15
    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass
    def onInput_Niveau(self, rVal):

        self.niveau = int(rVal)

        #1 nombre compris entre 1 et 10
        #2 nombre compris entre 1 et 100

    def onInput_Signe(self, rVal):

        self.signe = int(rVal)

        #nombre maximum de signe dans le calcul

    def onInput_Authorisation(self, rVal):

        self.authorisation = int(rVal)
        """
        signe autorisÃ© dans le calcul
         1: +
         2: -
         3: /
         4: *
         5: +-
         6: +*
         7: +/
         8: -*
         9: -/
        10: */
        11: +-*
        12: +-/
        13: +/*
        14: -*/
        15: +-*/
        """
    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box

            if self.niveau == 1:
                limMIN = 1
                limPLUS = 10
            elif self.niveau == 2:
                limMIN = 1
                limPLUS = 100
            if self.authorisation == 1 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                string=str(A)+"+"+str(B)+"="
                self.tts.say(string)
            elif self.authorisation == 1 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
                else :
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    string=str(A)+"+"+str(B)+"+"+str(C)+"="
                    self.tts.say(string)
            elif self.authorisation == 2 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                while B>A:
                    B = random.randint(limMIN, limPLUS)
                string=str(A)+"-"+str(B)+"="
                self.tts.say(string)
            elif self.authorisation == 2 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    while (A - B) < C:
                        C = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"-"+str(C)+"="
                    self.tts.say(string)
            elif self.authorisation == 3 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                A = A*B
                string=str(A)+"/"+str(B)+"="
                self.tts.say(string)
            elif self.authorisation == 3 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    A = A * B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(1, 10)
                    C = random.randint(1, 10)
                    A = A * B * C
                    string=str(A)+"/"+str(B)+"/"+str(C)+"="
                    self.tts.say(string)
            elif self.authorisation == 4 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                string=str(A)+"x"+str(B)+"="
                self.tts.say(string)
            elif self.authorisation == 4 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    string=str(A)+"x"+str(B)+"="
                    self.tts.say(string)
                else :
                    A = random.randint(0, 10)
                    B = random.randint(0, 10)
                    C = random.randint(0, 10)
                    string=str(A)+"x"+str(B)+"x"+str(C)+"="
                    self.tts.say(string)
            elif self.authorisation == 5 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 2)
                if S2 == 1:
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
                else :
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 5 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"+"+str(B)+"="
                        self.tts.say(string)
                else :
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 4)
                    if S2 == 1:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        while C > (A + B):
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"+"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        while C > (A - B):
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"+"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 6 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 2)
                if S2 == 1:
                    string=str(A)+"x"+str(B)+"="
                    self.tts.say(string)
                else :
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 6 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        string=str(A)+"x"+str(B)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"+"+str(B)+"="
                        self.tts.say(string)
                else :
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 4)
                    if S2 == 1:
                        string=str(A)+"x"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        string=str(A)+"+"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        string=str(A)+"x"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"+"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 7 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 2)
                if S2 == 1:
                    A=A*B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
                else :
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 7 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        A = A * B
                        string=str(A)+"/"+str(B)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"+"+str(B)+"="
                        self.tts.say(string)
                else :
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 4)
                    if S2 == 1:
                        A = A * B
                        string=str(A)+"/"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        B = B * C
                        string=str(A)+"+"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        string=str(A)+"+"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    else :
                        A = A * B * C
                        string=str(A)+"/"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 8 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 2)
                if S2 == 1:
                    string=str(A)+"x"+str(B)+"="
                    self.tts.say(string)
                else :
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 8 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        string=str(A)+"x"+str(B)+"="
                        self.tts.say(string)
                    else:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(0, 9)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 4)
                    if S2 == 1:
                        while C > (A*B):
                            A = random.randint(limMIN, limPLUS)
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"x"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        while (B*C) > A:
                            A = random.randint(limMIN, limPLUS)
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        string=str(A)+"x"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    else:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        while (A - B) < C:
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 9 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 2)
                if S2 == 1:
                    A=A*B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
                else :
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 9 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        A = A * B
                        string=str(A)+"/"+str(B)+"="
                        self.tts.say(string)
                    else:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(0, 9)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 4)
                    if S2 == 1:
                        while C > A:
                            B = random.randint(limMIN, limPLUS)
                        A = A * B
                        string=str(A)+"/"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        B=B*C
                        string=str(A)+"-"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        A = A*B*C
                        string=str(A)+"/"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    else:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        while (A - B) < C:
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 10 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 2)
                if S2 == 1:
                    A=A*B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
                else :
                    string=str(A)+"x"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 10 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        A = A * B
                        string=str(A)+"/"+str(B)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"x"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(0, 9)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 4)
                    if S2 == 1:
                        while C > A:
                            B = random.randint(limMIN, limPLUS)
                        A = A * B * C
                        string=str(A)+"/"+str(B)+"*"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        B=B*C
                        string=str(A)+"x"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        A = A*B*C
                        string=str(A)+"/"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"x"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 11 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 3)
                if S2 == 1:
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
                elif S2 == 2:
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
                else :
                    string=str(A)+"x"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 11 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        string=str(A)+"+"+str(B)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"="
                        self.tts.say(string)
                    else:
                        string=str(A)+"x"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 9)
                    if S2 == 1:
                        string=str(A)+"x"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        string=str(A)+"+"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        string=str(A)+"x"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 4:
                        string=str(A)+"+"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 5:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 6:
                        while C > (A + B):
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"+"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 7:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        while C > (A - B):
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 8:
                        while C > (A*B):
                            A = random.randint(limMIN, limPLUS)
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"x"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    else:
                        while (B*C) > A:
                            A = random.randint(limMIN, limPLUS)
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"*"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 12 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 3)
                if S2 == 1:
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
                elif S2 == 2:
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
                else:
                    A = A * B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 12 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        string=str(A)+"+"+str(B)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"="
                        self.tts.say(string)
                    else:
                        A=A*B
                        string=str(A)+"/"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 9)
                    if S2 == 1:
                        A=A*B
                        string=str(A)+"/"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        B=B*C
                        string=str(A)+"+"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        A=A*B*C
                        string=str(A)+"/"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 4:
                        string=str(A)+"+"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 5:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 6:
                        while C > (A + B):
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"+"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 7:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        while C > (A - B):
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 8:
                        while C > A:
                            C = random.randint(limMIN, limPLUS)
                        A=A*B
                        string=str(A)+"/"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    else:
                        while B > A:
                            A = random.randint(limMIN, limPLUS)
                        B=B*C
                        string=str(A)+"-"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 13 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 3)
                if S2 == 1:
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
                elif S2 == 2:
                    string=str(A)+"*"+str(B)+"="
                    self.tts.say(string)
                else:
                    A = A * B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 13 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 2)
                    if S2 == 1:
                        string=str(A)+"+"+str(B)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        string=str(A)+"x"+str(B)+"="
                        self.tts.say(string)
                    else:
                        A = A * B
                        string=str(A)+"/"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 9)
                    if S2 == 1:
                        A = A * B
                        string=str(A)+"/"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        B = B * C
                        string=str(A)+"+"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        A = A * B * C
                        string=str(A)+"/"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 4:
                        string=str(A)+"+"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 5:
                        string=str(A)+"x"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 6:
                        string=str(A)+"+"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 7:
                        string=str(A)+"x"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 8:
                        A=A*B*C
                        string=str(A)+"/"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    else:
                        B = B * C
                        string=str(A)+"x"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 14 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 3)
                if S2 == 1:
                    string=str(A)+"x"+str(B)+"="
                    self.tts.say(string)
                elif S2 == 2:
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
                else:
                    A = A * B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 14 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 3)
                    if S2 == 1:
                        string=str(A)+"x"+str(B)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"="
                        self.tts.say(string)
                    else:
                        A = A * B
                        string=str(A)+"/"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 9)
                    if S2 == 1:
                        A=A*B*C
                        string=str(A)+"/"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        B=B*C
                        string=str(A)+"x"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        A=A*B*C
                        string=str(A)+"/"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 4:
                        string=str(A)+"x"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 5:
                        while (B*C) > A:
                            B = random.randint(limMIN, limPLUS)
                            C = random.randint(1, 10)
                        string=str(A)+"-"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 6:
                        while C > (A + B):
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"x"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 7:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        while C > (A - B):
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 8:
                        while C > A:
                            C = random.randint(limMIN, limPLUS)
                        A=A*B
                        string=str(A)+"/"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    else:
                        while B > A:
                            A = random.randint(limMIN, limPLUS)
                        B=B*C
                        string=str(A)+"-"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
            elif self.authorisation == 15 and self.signe == 1:
                A = random.randint(limMIN, limPLUS)
                B = random.randint(limMIN, limPLUS)
                S2 = random.randint(1, 4)
                if S2 == 1:
                    string=str(A)+"+"+str(B)+"="
                    self.tts.say(string)
                elif S2 == 2:
                    string=str(A)+"x"+str(B)+"="
                    self.tts.say(string)
                elif S2 == 3:
                    while B > A:
                        B = random.randint(limMIN, limPLUS)
                    string=str(A)+"-"+str(B)+"="
                    self.tts.say(string)
                else:
                    A = A * B
                    string=str(A)+"/"+str(B)+"="
                    self.tts.say(string)
            elif self.authorisation == 15 and self.signe == 2:
                S1 = random.randint(1, 2)
                if S1 == 1:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 4)
                    if S2 == 1:
                        string=str(A)+"+"+str(B)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        string=str(A)+"x"+str(B)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"="
                        self.tts.say(string)
                    else:
                        A = A * B
                        string=str(A)+"/"+str(B)+"="
                        self.tts.say(string)
                else:
                    A = random.randint(limMIN, limPLUS)
                    B = random.randint(limMIN, limPLUS)
                    C = random.randint(limMIN, limPLUS)
                    S2 = random.randint(1, 9)
                    if S2 == 1:
                        A = A * B * C
                        string=str(A)+"/"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 2:
                        B = B * C
                        string=str(A)+"x"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 3:
                        A = A * B * C
                        string=str(A)+"/"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 4:
                        string=str(A)+"x"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 5:
                        while (B * C) > A:
                            B = random.randint(limMIN, limPLUS)
                            C = random.randint(1, 10)
                        string=str(A)+"-"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 6:
                        while C > (A + B):
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"x"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 7:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        while C > (A - B):
                            C = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 8:
                        while C > A:
                            C = random.randint(limMIN, limPLUS)
                        A = A * B
                        string=str(A)+"/"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 9:
                        A = A * B
                        string=str(A)+"/"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 10:
                        B = B * C
                        string=str(A)+"+"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 11:
                        string=str(A)+"+"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 12:
                        string=str(A)+"x"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 13:
                        string=str(A)+"+"+str(B)+"x"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 14:
                        while B > A:
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"-"+str(B)+"+"+str(C)+"="
                        self.tts.say(string)
                    elif S2 == 15:
                        while C > (A + B):
                            B = random.randint(limMIN, limPLUS)
                        string=str(A)+"+"+str(B)+"-"+str(C)+"="
                        self.tts.say(string)
                    else:
                        while B > A:
                            A = random.randint(limMIN, limPLUS)
                        B = B * C
                        string=str(A)+"-"+str(B)+"/"+str(C)+"="
                        self.tts.say(string)
                    pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-    up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="Niveau" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                            <Input name="Signe" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                            <Input name="Authorisation" type="2" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                        </Box>
                        <Box name="Number Edit" id="3" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="101" y="198">
                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
</content>
                            </script>
                            <pluginContent>
                                <number>1</number>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                        </Box>
                        <Box name="Number Edit (1)" id="4" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="104" y="272">
                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
</content>
                            </script>
                            <pluginContent>
                                <number>1</number>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                        </Box>
                        <Box name="Number Edit (2)" id="5" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="136" y="390">
                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(15)]]>
</content>
                            </script>
                            <pluginContent>
                                <number>15</number>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="1" indexofinput="4" outputowner="3" indexofoutput="3" />
                        <Link inputowner="1" indexofinput="5" outputowner="4" indexofoutput="3" />
                        <Link inputowner="1" indexofinput="6" outputowner="5" indexofoutput="3" />
                        <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
